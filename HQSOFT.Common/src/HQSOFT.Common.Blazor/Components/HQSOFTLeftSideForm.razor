@using Blazorise.Components;
@using HQSOFT.Common.HQAssigneds;

@using HQSOFT.Common.HQShares;
@using Volo.Abp.AspNetCore.Components.Messages;
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.Identity;
@using global::HQSOFT.Common.Localization
@using global::HQSOFT.Common.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@inherits CommonComponentBase
@inject IHQAssignedsAppService HQAssignedsAppService
@inject IHQSharesAppService HQSharesAppService
@inject IUiMessageService UiMessageService
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager
@using Volo.Abp.Http.Client;
<Card>
    <CardBody>
        @*<Text>@Value</Text>*@
        <Icon Name="IconName.UserPlus" />
        <Text class="title">Assigned To</Text>
       @* <br />
        <button style="border-radius:50%;margin-top:10px; margin-bottom:10px">
            <Icon Name="IconName.PlusCircle" Style="color:black" />
        </button>
        <br />*@
        <Button Style="margin-top: 20px; width:100%" Outline Clicked="OpenEditHQAssignedModalAsync">
            <Icon Name="IconName.PlusCircle"  />
        </Button>
        @foreach(var item in SelectedIdentityUsers)
        {
            <Field>
                <Text>              
                     @item.DisplayName
                </Text>
            </Field>
        }
        <Span>Vinh Lam</Span>

 
        <Icon Name="IconName.Paperclip" />
        <Text class="title">Attachments</Text>

        <Button Size="Size.Small" Color="Color.Dark" Style="margin-top:10px; margin-bottom:10px; width:100%" Outline>
            Attach File  <Icon Name="IconName.PlusCircle" />
        </Button>

        <Icon Name="IconName.Star" />
        <Text class="title">Review</Text>
        <br />
        <button style="border-radius:50%; margin-top:10px;margin-bottom:10px">
            <Icon Name="IconName.PlusCircle" Style="color:black" />
        </button>
        @* <Button Color="Color.Dark" Style="margin-top: 20px; width:100%; border-radius=50%" Outline>
        <Icon Name="IconName.PlusCircle" />
        </Button>*@
        <br />
        <Icon Name="IconName.Share" />
        <Text class="title">Share With</Text>
       @* <br />
        <button style="border-radius:50%; margin-top:10px;margin-bottom:10px">
            <Icon Name="IconName.PlusCircle" Style="color:black" />
        </button>
        <br />*@
        <Button Color="Color.Dark" Style="margin-top: 20px; width:100%" Outline Clicked="OpenEditHQShareModalAsync">
            <Icon Name="IconName.PlusCircle" />
        </Button>
        <Row Style="margin-top:100px"></Row>
        <Icon Name="IconName.Comment" />
        <Text Style="margin:10px">0</Text>
        <hr />
        <CardTitle Style="font-weight:bold">Edit History</CardTitle>
        <Row>
            <Text>You edited this 6 hours ago</Text>
            <Text>You created this 1 week ago</Text>
        </Row>

    </CardBody>
</Card>

@* ************************* EDIT MODAL ASSIGNED ************************* *@
<Modal @ref="EditHQAssignedModal" Closing="@EditHQAssignedModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="CreateHQAssignedForm">
            <ModalHeader>
                <ModalTitle>@L["NewHQAssigned"]</ModalTitle>
                <CloseButton Clicked="CloseCreateHQAssignedModalAsync" />
            </ModalHeader>
            <ModalBody>      
                        <Validations @ref="@EditingHQAssignedValidations"
                                     Mode="ValidationMode.Auto"
                                     Model="@EditHQAssignedModal"
                                     ValidateOnLoad="false">
                            <TabPanel Name="identityUsers-create-tab">
                                <Row>
                                    <Column ColumnSize="ColumnSize.Is12">
                                        <Field>

                                            <Autocomplete Data="@IdentityUsers"
                                                          TItem="LookupDto<Guid>"
                                                          TValue="string"
                                                          TextField="@((item) => item.DisplayName)"
                                                          ValueField="@((item) => item.Id.ToString())"
                                                          SearchChanged="@GetIdentityUserLookupAsync"
                                                          SelectionMode="AutocompleteSelectionMode.Multiple"
                                                          FreeTyping
                                                          @bind-SelectedValues="@SelectedIdentityUserId"
                                                          @bind-SelectedTexts="@SelectedIdentityUserText"
                                                          Placeholder="&#8212;" />
                                        </Field>
                                    </Column>

                                   @* <Column ColumnSize="ColumnSize.Is3">
                                        <Button Color="Color.Info" TextColor="TextColor.White" Size="Size.Small" Clicked="AddIdentityUser">
                                            <Icon class="fa fa-plus"></Icon> @L["Add"]
                                        </Button>
                                    </Column>*@
                                </Row>
                                @if (SelectedIdentityUsers.Any())
                                {
                                    <Table striped-rows="true" responsive-sm="true" class="mt-2">
                                        <TableHeader>
                                            <TableHeaderCell><Span class="float-start">@L["Email"]</Span></TableHeaderCell>
                                        </TableHeader>
                                        <TableBody>
                                            @foreach (var identityUser in SelectedIdentityUsers)
                                            {
                                                <TableRow>
                                                    <TableRowCell><Span class="float-start">@identityUser.DisplayName</Span></TableRowCell>
                                                    <TableRowCell>
                                                        <span class="btn btn-danger btn-sm float-end"
                                                      @onclick="() => SelectedIdentityUsers.RemoveAll(s => s.Id == identityUser.Id)">
                                                            <Icon Class="fa fa-trash"></Icon>
                                                        </span>
                                                    </TableRowCell>
                                                </TableRow>
                                            }
                                        </TableBody>
                                    </Table>
                                }
                            </TabPanel>
                            <TabPanel Name="hQAssigned-create-tab">
                                <Validation>
                                    <Field>
                                        <FieldLabel>@L["Completeby"]</FieldLabel>
                                        <DateEdit TValue="DateTime" InputMode="DateInputMode.DateTime" @bind-Date="@EditingHQAssigned.Completeby">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </DateEdit>
                                    </Field>
                                </Validation>


                                <Field>
                                    <FieldLabel>@L["Priority"]</FieldLabel>
                                    <Select TValue="PriorityAssign" @bind-SelectedValue="@EditingHQAssigned.Priority">
                                        @foreach (var itemValue in Enum.GetValues(typeof(PriorityAssign)))
                                        {
                                            <SelectItem TValue="PriorityAssign" Value="@((PriorityAssign) itemValue)">
                                                @L[$"Enum:PriorityAssign.{((PriorityAssign) itemValue).ToString("d")}"]
                                            </SelectItem>
                                        }
                                    </Select>
                                </Field>


                                <Validation>
                                    <Field>
                                        <FieldLabel>@L["Comment"]</FieldLabel>
                                        <MemoEdit @bind-Text="@EditingHQAssigned.Comment">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </MemoEdit>
                                    </Field>
                                </Validation>


                            </TabPanel>
                           
                        </Validations>               
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateHQAssignedModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateHQAssignedForm" Clicked="CreateHQAssigmentAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>


@* ************************* EDIT MODAL SHARE ************************* *@
<Modal @ref="EditHQShareModal" Closing="@EditHQShareModal.CancelClosingModalWhenFocusLost" >
    <ModalContent Centered="true"Size="ModalSize.Large">
        <Form id="EditHQShareForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditHQShareModalAsync" />
            </ModalHeader>
            <ModalBody>
              
                        <Validations @ref="@EditingHQShareValidations"
                                     Mode="ValidationMode.Auto"
                                     Model="@EditingHQShare"
                                     ValidateOnLoad="false">
                         <Row>


                                   <Column ColumnSize="ColumnSize.Is2">
                                       <Row>User</Row>
                                       <Row>Everyone</Row>
                                   </Column>
                                   <Column ColumnSize="ColumnSize.Is2">
                                        <Field>
                                <Check TValue="bool" @bind-Checked="@EditingHQShareAll.CanRead">@L["CanRead"]</Check>
                                        </Field>
                                   </Column>

                                            <Column ColumnSize="ColumnSize.Is2">
                                        <Field>
                                            <Check TValue="bool" @bind-Checked="@EditingHQShareAll.CanWrite">@L["CanWrite"]</Check>
                                        </Field>
                                    </Column>

                                            <Column ColumnSize="ColumnSize.Is2">
                                        <Field>
                                <Check TValue="bool" @bind-Checked="@EditingHQShareAll.CanSubmit">@L["CanSubmit"]</Check>
                                        </Field>
                                   </Column>

                                            <Column ColumnSize="ColumnSize.Is2">
                                        <Field>
                                <Check TValue="bool" @bind-Checked="@EditingHQShareAll.CanShare">@L["CanShare"]</Check>
                                        </Field>
                                    </Column>
                        </Row>        


                                    @if (SelectedIdentityUsers.Any())
                                {
                                    <Table striped-rows="true" responsive-sm="true" class="mt-2">
                                        <TableHeader>
                                            <TableHeaderCell><Span class="float-start">@L["Email"]</Span></TableHeaderCell>
                                        </TableHeader>
                                        <TableBody>
                                            @foreach (var identityUser in SelectedIdentityUsers)
                                            {
                                                <TableRow>
                                                    <TableRowCell><Span class="float-start">@identityUser.DisplayName</Span></TableRowCell>
                                                    <TableRowCell>
                                                        <span class="btn btn-danger btn-sm float-end"
                                                      @onclick="() => SelectedIdentityUsers.RemoveAll(s => s.Id == identityUser.Id)">
                                                            <Icon Class="fa fa-trash"></Icon>
                                                        </span>
                                                    </TableRowCell>
                                        <TableRowCell>
                                            <Field>
                                                <Check TValue="bool" @bind-Checked="@checkvalue">@L["CanRead"]</Check>
                                            </Field>
                                        </TableRowCell>
                                        <TableRowCell>
                                            <Field>
                                                <Check TValue="bool" @bind-Checked="@EditingHQShare.CanWrite">@L["CanWrite"]</Check>
                                            </Field>
                                        </TableRowCell>
                                        <TableRowCell>
                                            <Field>
                                                <Check TValue="bool" @bind-Checked="@EditingHQShare.CanSubmit">@L["CanSubmit"]</Check>
                                            </Field>
                                        </TableRowCell>
                                        <TableRowCell>
                                            <Field>
                                                <Check TValue="bool" @bind-Checked="@EditingHQShare.CanShare">@L["CanShare"]</Check>
                                            </Field>
                                        </TableRowCell>
                           
                                                </TableRow>
                                            }
                                        </TableBody>
                                    </Table>
                                }

                               <Row>
                                    <Column ColumnSize="ColumnSize.Is4">
                                        <Field>

                                            <Autocomplete Data="@IdentityUsers"
                                                          TItem="LookupDto<Guid>"
                                                          TValue="string"
                                                          TextField="@((item) => item.DisplayName)"
                                                          ValueField="@((item) => item.Id.ToString())"
                                                          SearchChanged="@GetIdentityUserLookupAsync"                                                      
                                                          @bind-SelectedValues="@SelectedIdentityUserId"
                                                          @bind-SelectedTexts="@SelectedIdentityUserText"
                                                          Placeholder="&#8212;" />
                                            </Field>
                                            </Column>

                                         
                                   <Column ColumnSize="ColumnSize.Is2">
                                        <Field>
                                <Check TValue="bool" @bind-Checked="@EditingHQShareAdd.CanRead">@L["CanRead"]</Check>
                                        </Field>
                                   </Column>

                                            <Column ColumnSize="ColumnSize.Is2">
                                        <Field>
                                <Check TValue="bool" @bind-Checked="@EditingHQShareAdd.CanWrite">@L["CanWrite"]</Check>
                                        </Field>
                                    </Column>

                                            <Column ColumnSize="ColumnSize.Is2">
                                        <Field>
                                <Check TValue="bool" @bind-Checked="@EditingHQShareAdd.CanSubmit">@L["CanSubmit"]</Check>
                                        </Field>
                                   </Column>

                                            <Column ColumnSize="ColumnSize.Is2">
                                        <Field>
                                <Check TValue="bool" @bind-Checked="@EditingHQShareAdd.CanShare">@L["CanShare"]</Check>
                                        </Field>
                                    </Column>
                               </Row>        
                               <Row>

                                <Column ColumnSize="ColumnSize.Is2">
                                <Button Color="Color.Info" TextColor="TextColor.White" Size="Size.Small" Clicked="AddIdentityUser">
                                <Icon class="fa fa-plus"></Icon> @L["Add"]
                                </Button>
                                </Column>
                               </Row>
                        </Validations>          
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditHQShareModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateHQShareForm" Clicked="CreateHQShareAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
<style>
    .title {
        margin-left: 10px;
    }
</style>
@code {
  
}